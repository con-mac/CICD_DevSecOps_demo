name: DevSecOps CI/CD Pipeline  

on:
  push:
    branches:
      - main  # 

jobs:
  build_and_scan:
    name: Build, Security Scan, and Deploy  # name displayed in GitHub Actions UI
    runs-on: ubuntu-latest  

    steps:

      ## 1. Compile (Src) Stage

      # latest version of the repo
      - name: Checkout Code
        uses: actions/checkout@v3

      ## 2. Build Stage

      # Docker Buildx for multi-platform builds and caching
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build docker nginx image
      - name: Build Docker Image
        run: |
          docker build -t devsecops-nginx .

      ## 3. Test Stage      

      # Security Scan using Trivy (SAST & Dependency scanning)
      - name: Scan for Vulnerabilities (Trivy)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "devsecops-nginx"  # Scan the built Docker image
          format: "table"  # Output format
          exit-code: 1  # Pipeline will fail and exit out if vulnerabilities are found
          severity: "CRITICAL,HIGH"  

      # Generate SBOM (Software Bill of Materials) for Dependency check
      # Generates SBOM and saves it to 'sbom.json' and display in GitHub Actions log
      # run Docker scout on sbom and cves checker
      - name: Generate SBOM (Software Bill of Materials)
        run: |
          echo "🔍 Generating SBOM with Docker Scout..." 
          docker scout quickview devsecops-nginx > sbom.json 
          cat sbom.json  

          echo "🛡️ Running Docker Scout Security Scan..."
          docker scout cves devsecops-nginx --format json > vulnerabilities_report.json
          cat vulnerabilities_report.json  

      # Run OWASP ZAP Dynamic Application Security Testing (DAST)
      - name: Run OWASP ZAP Security Scan (DAST)
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: "http://localhost:8080"  # This tests the live running application for vulnerabilities

      ## 4. Deploy/Release Stage
    
      - name: Deploy Application (Placeholder)
        run: echo "Deployment step to be implemented (Terraform/Kubernetes etc.)"
