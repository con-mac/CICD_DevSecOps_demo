name: DevSecOps CI/CD Pipeline  

on:
  push:
    branches:
      - master  # Trigger when pushing to master branch

jobs:
  build_and_scan:
    name: Build, Security Scan, and Deploy
    runs-on: ubuntu-latest  

    steps:
      ## 1. Compile (Source) Stage
      - name: Checkout Code
        uses: actions/checkout@v3

      ## 2. Build Stage
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        run: |
          docker build -t devsecops-nginx .

      ## 3. Test & Security Scan Stage      
      - name: Scan for Vulnerabilities (Trivy)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "devsecops-nginx"
          format: "table"
          exit-code: 0
          severity: "CRITICAL,HIGH"  

      - name: Docker Hub Login
        run: |
          echo "üîë Logging into Docker Hub..."
          echo "${{ secrets.DOCKER_PAT }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Install Docker Scout
        run: |
          echo "üîΩ Installing Docker Scout..."
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install.sh
          chmod +x install.sh
          ./install.sh
          
          echo "‚úÖ Verifying Docker Scout Installation..."
          docker scout quickview --help

      - name: Generate SBOM (Software Bill of Materials)
        run: |
          echo "üîç Generating SBOM with Docker Scout..." 
          docker scout quickview devsecops-nginx > sbom.json 
          cat sbom.json  

      - name: Run Docker Scout Security Scan
        run: |
          echo "üõ°Ô∏è Running Docker Scout Security Scan..."
          docker scout cves devsecops-nginx --format sarif -o vulnerabilities.sarif || echo "‚ö†Ô∏è Vulnerabilities detected, but continuing pipeline..."
          cat vulnerabilities.sarif

      # Start the application for DAST scanning
      - name: Start Nginx Container
        run: |
          docker run -d -p 8080:80 devsecops-nginx
          sleep 10  # Give the container time to start

      # OWASP ZAP DAST Scan
      - name: Run OWASP ZAP Security Scan (DAST)
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:8080'
          allow_issue_writing: false
          fail_action: false  # Don't fail the pipeline on detected issues

      ## 4. Deploy/Release Stage    
      - name: Deploy Application (Placeholder)
        run: echo "Deployment step to be implemented (Terraform/Kubernetes etc.)"